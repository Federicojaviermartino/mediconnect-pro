version: '3.8'

services:
  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: mediconnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - mediconnect_network

  # PostgreSQL for future migration (optional, not yet implemented)
  postgres:
    image: postgres:15-alpine
    container_name: mediconnect-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-mediconnect}
      POSTGRES_USER: ${DB_USER:-mediconnect_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password_2024}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./demo-app/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mediconnect_user} -d ${DB_NAME:-mediconnect}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - mediconnect_network
    profiles:
      - postgres  # Only start when explicitly requested

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  mediconnect_network:
    driver: bridge
